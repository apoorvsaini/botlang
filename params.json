{"name":"BotLang","tagline":"An AI language interpreter written in PHP.","body":"# BotLang\r\n  \r\n##What is BotLang?  \r\nA language that makes it easy to define AI behaviours for bots/programs. The language is written in PHP and needs to be wrapped as an Object of BotLang.  \r\nCurrently only PHP library of BotLang is in development.  \r\n>BotLang is inspired by AIML and extends its functionalities\r\n\r\n##Intro to BotLang code\r\n```BootLang\r\n[..]\r\n?1[How are you doing] #pattern with variable 1\r\n:1[I am fine] #response of variable 1\r\n:1.1[I don't know] #alternate response for 1, chosen on random\r\n\r\n?2[why don't you know?] \t\r\n:2[I am down with fever]\r\n\r\n?3[My name is $name]\r\n:3[Well, hello there, $name]\r\n\r\n?4[What is your name?]\r\n:4[My name is WizBot]\r\n\r\n?5[What are you called?]\r\n:5>4\r\n\r\n# : is selector for response, . selectors make it cascaded and random response is selected\r\n# ? is selector for pattern\r\n# $ is used for setting response and template variables\r\n# * is used to mark the spot of mutation, BotLang will store a mirrored code and check if any mutation is needed\r\n# > is used to direct the response to previous or some other pattern\r\n[/..]\r\n```\r\n\r\n##Here is how to run a BotLang code using interpreter written in PHP\r\n```PHP\r\n<?\r\n$bot=new botlang(); //creating a botlang object\r\n\r\n//You can run a BotLang script directly\r\n$bot->load(\"script://test.botlang\"); // script prefix is important for it to know that you are loading script\r\n\r\n//EXECUTION\r\n\r\n//Now that your bot is prepared with default behaviour you can run it on different templates \r\n\r\n$response=$bot->execute(\"Hi what is your name?\");\r\n\r\n?>\r\n\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}